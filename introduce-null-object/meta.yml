title: Introduce Null Object
initial_situation: Logic for dealing with a null field or variable is duplicated throughout your code.
target_situation: Replace the null logic with a Null Object, an object that provides the approriate null behavior.
difficulty: easy

fixes: [duplicated-code, conditional-complexity]

pros:
    - "Prevents null errors without duplicating null logic.\r"
    - 'Simplifies code by minimizing null tests.'

cons:
    - "Complicates a design when a system needs only a few null tests.\r"
    - "Can lead to redundant null tests if programmers are unaware of a Null Object implementation.\r"
    - 'Complicates maintenance. Null Objects that have a superclass must override all newly inherited public methods.'

intro: |
    Depending on the language, calling a method on a variable which is null leads to
    errors, system crashes or related behavior. In order to avoid this, developers
    wrap the variable in null checks. Repeating such null handling logic in one or
    two places is not necessarily a problem, but sprinkling it over the entire codebase
    is less than ideal.

    Code with many null checks is usually harder to read and comprehend. Null
    checks must also be repeated in all future code, so all developers have to be
    aware of duplicating the appropriate behavior.

    Introducing a Null Object, an object which represents the behavior in case of "null",
    should usually reduce or at least keep the code size even. If the code size increases,
    it is usually a sign that a Null Object is not necessary.

    A Null object can rawly be implemented in two flavors. Either by sub-classing, or
    by implementing an interface. In the examples section, we will demonstrate both
    variants.

    .. note ::
        If you implement a Null Object by sub-classing, keep in mind that you need to
        add new null-handling logic each time a method is added in the parent class.
        Otherwise, non-null logic might be accidentally exposed. The interface approach
        does not suffer from this liability.

checklist:
    -
        title: 'Create a Null Object'
        description: 'A null object can be created either by sub-classing or by implement an interface.'
    -
        title: 'Find Null Check'
        description: 'A null check is code which either checks that a variable is not null to then execute a method on it, or code that performs some alternative behavior in case a variable is null. Implement the null-behavior in the Null Object.'
    -
        title: 'Repeat step 2'
        description: 'Do the same for all other null checks.'
    -
        title: 'Initialize Variable/Field to Null Object'
        description: 'Go to a class where a null check is used an initialize a field or variable to the Null object at the earliest possible time.'
    -
        title: 'Replace Null Checks'
        description: 'In the same class, replace all null checks with calls to the method on the Null object instead.'
    -
        title: 'Repeat steps 4 & 5'
        description: 'Repeat both steps until all null checks have been removed.'
